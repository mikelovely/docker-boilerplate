server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /opt/app/public;
    index index.php;

    server_name _;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    # From https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx
    #
    # One of the main use-cases of FastCGI proxying within Nginx is for PHP processing.
    # Unlike Apache, which can handle PHP processing directly with the use of the mod_php module,
    # Nginx must rely on a separate PHP processor to handle PHP requests.
    # Most often, this processing is handled with php-fpm, a PHP processor that has been extensively
    # tested to work with Nginx.
    location ~ \.php$ {
        fastcgi_pass unix:/run/php/php7-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        try_files $fastcgi_script_name =404;
        set $path_info $fastcgi_path_info;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_index index.php;
        include fastcgi.conf;
    }
}
